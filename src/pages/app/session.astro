---
import Layout from '@src/layouts/app.astro';
import { fetchSessionLiftRows } from '@/src/data';
import { fetchLifts } from '@/src/data';

const sessionId = 1;
const allLifts = await fetchLifts();
const sessionLifts = await fetchSessionLiftRows(1);
// const exercises: string[] = [];

// //get the exercises used in the session
// for (let i = 0; i < sessionLifts.length; i++) {
//   if (!exercises.includes(sessionLifts[i].exer_name)) {
//     exercises.push(sessionLifts[i].exer_name);
//   }
// }
// //object structure to store data
// const lift = { wt: 0, reps: 0 };
// const liftRow = {
//   exercise: '',
//   lifts: [lift],
//   comments: '',
//   rowHtml: function () {
//     console.log('Exercise: ', this.exercise);
//     for (const lift of this.lifts) {
//       console.log(`Wt: ${lift.wt} Reps: ${lift.reps}`);
//     }

//     console.log('Comment', this.comments);
//   },
// };

// //get the lifts associated with exercise and add them to liftRows[]
// for (let i = 0; i < exercises.length; i++) {
//   const exercise = exercises[i];
//   let comments = '';
//   const lifts = [];
//   for (let j = 0; j < sessionLifts.length; j++) {
//     if (sessionLifts[j].exer_name === exercise) {
//       const lift = {
//         wt: sessionLifts[j].weight,
//         reps: sessionLifts[j].reps,
//       };

//       lifts.push(lift);
//       comments = ' ' + sessionLifts[j].comments;
//     }
//   }
//   const newLiftRow = Object.create(liftRow);
//   newLiftRow.exercise = exercise;
//   newLiftRow.lifts = [...lifts];
//   newLiftRow.comments = comments;
//   liftRows.push(newLiftRow);
//

console.log('session lifts from session.astro', sessionLifts);
console.log('all lifts from session.astro', allLifts);
---

<!-- <Layout title="Session">
  {
    sessionLifts.length === 0 && (
      <p>No lifts found for sessionId: {sessionId}</p>
    )
  }

  {
    sessionLifts.length > 0 && (
      <div class="flex flex-row text-xl">
        <div class="p-2 basis-1/4"> {sessionLifts[0].session_date}</div>
        <div class="p-2 basis-1/8 capitalize"> {sessionLifts[0].user_name}</div>
      </div>
    )
  }

  <div class="header flex flex-row">
    <div class="p-2 basis-1/4">Exercise</div>
    <div class="p-2 basis-1/12">Wt</div>
    <div class="p-2 basis-1/12">Reps</div>
    <div class="p-2 basis-1/12">Wt</div>
    <div class="p-2 basis-1/12">Reps</div>
    <div class="p-2 basis-1/12">Wt</div>
    <div class="p-2 basis-1/12">Reps</div>
    <div class="p-2 basis-1/12">Wt</div>
    <div class="p-2 basis-1/12">Reps</div>
    <div class="p-2 basis-1/12">Wt</div>
    <div class="p-2 basis-1/12">Reps</div>
    <div class="p-2 basis-1/12">Comments</div>
  </div>
  {
    liftRows.length > 0 &&
      liftRows.map((liftRow, i) => (
        <div>
          <div class="flex flex-row text-xs justify-items-end">
            <div class="p-2 basis-1/4 ">{liftRow.exercise}</div>
            <div class="p-2 basis-1/12">{liftRow.lifts[0].wt}</div>
            <div class="p-2 basis-1/12">{liftRow.lifts[0].reps}</div>

            <div class="p-2 basis-1/12">
              {liftRow.lifts.length > 1 ? liftRow.lifts[1].wt : '-'}
            </div>
            <div class="p-2 basis-1/12">
              {liftRow.lifts.length > 1 ? liftRow.lifts[1].reps : '-'}
            </div>
            <div class="p-2 basis-1/12">
              {liftRow.lifts.length > 2 ? liftRow.lifts[2].wt : '-'}
            </div>
            <div class="p-2 basis-1/12">
              {liftRow.lifts.length > 2 ? liftRow.lifts[2].reps : '-'}
            </div>
            <div class="p-2 basis-1/12">
              {liftRow.lifts.length > 3 ? liftRow.lifts[3].wt : '-'}
            </div>
            <div class="p-2 basis-1/12">
              {liftRow.lifts.length > 3 ? liftRow.lifts[3].reps : '-'}
            </div>
            <div class="p-2 basis-1/12">
              {liftRow.lifts.length > 4 ? liftRow.lifts[3].wt : '-'}
            </div>
            <div class="p-2 basis-1/12">
              {liftRow.lifts.length > 4 ? liftRow.lifts[3].reps : '-'}
            </div>

            <div class="p-2 basis-1/12">{liftRow.comments}</div>
          </div>
        </div>
      ))
  }
</Layout> -->
